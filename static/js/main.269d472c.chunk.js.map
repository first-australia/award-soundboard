{"version":3,"sources":["Track.js","TrackList.js","App.js","serviceWorker.js","index.js"],"names":["Track","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","runtime","track","selected","playing","played","disabled","volume","cut","bind","assertThisInitialized","click","playSound","stopSound","incVolume","decVolume","updateRuntime","enable","changingVolume","soundManager","setup","ignoreMobileRestrictions","evt","selectable","console","log","setState","onSelect","v","setTimeout","secsLeft","duration","position","Math","round","react_default","a","createElement","lib_default","url","process","path","playStatus","Sound","status","PLAYING","STOPPED","autoLoad","onLoad","onPlaying","cn","className","onClick","title","artist","sound","Button","control","trackDetails","Component","TrackList","tab","select","getRow","x","idx","val","_this2","header","startsWith","key","songs","indexOf","colSpan","Track_Track","b","_this3","lst","filter","copyright","sort","sortString","Container","Navbar","Nav","pills","NavItem","NavLink","pickTab","active","Table","dark","map","App","pdf","tooltipOpen","handleUpload","toggle","success","Row","Col","sm","TrackList_TrackList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.269d472c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Sound from 'react-sound';\r\nimport './App.css';\r\nimport {Button} from 'reactstrap';\r\nimport {soundManager} from 'soundmanager2';\r\n\r\nexport default class Track extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            runtime: this.props.track.runtime,\r\n            selected: false,\r\n            playing: false,\r\n            played: false,\r\n            disabled: true,\r\n            volume: 0\r\n        };\r\n        this.cut = this.cut.bind(this);\r\n        this.click = this.click.bind(this);\r\n        this.playSound = this.playSound.bind(this);\r\n        this.stopSound = this.stopSound.bind(this);\r\n        this.incVolume = this.incVolume.bind(this);\r\n        this.decVolume = this.decVolume.bind(this);\r\n        this.updateRuntime = this.updateRuntime.bind(this);\r\n        this.enable = this.enable.bind(this);\r\n        this.changingVolume = false;\r\n\r\n        soundManager.setup({\r\n            ignoreMobileRestrictions: true\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    click(evt) {\r\n        // Should check if anything else is selected.\r\n        if (!this.props.selectable || this.state.disabled) return;\r\n        console.log(this.props.track);\r\n        if (this.changingVolume) return;\r\n        if (this.state.selected)\r\n            this.decVolume();\r\n        else\r\n            this.playSound();\r\n    }\r\n\r\n    playSound() {\r\n        this.setState({playing: true});\r\n        this.incVolume();\r\n        this.setState({selected: true});\r\n        this.props.onSelect();\r\n    }\r\n\r\n    incVolume() {\r\n        this.changingVolume = true;\r\n        let v = this.state.volume + 5;\r\n        if (v < 100) setTimeout(this.incVolume, 50);\r\n        else this.changingVolume = false;\r\n        this.setState({volume: v});\r\n    }\r\n\r\n    decVolume() {\r\n        this.changingVolume = true;\r\n        let v = this.state.volume - 4;\r\n        if (v > 0) setTimeout(this.decVolume, 50);\r\n        else {\r\n            this.stopSound();\r\n            this.changingVolume = false;\r\n        }\r\n        this.setState({volume: v});\r\n    }\r\n\r\n    stopSound() {\r\n        this.setState({playing: false, selected: false, volume: 0, played: true});\r\n        this.props.onSelect();\r\n    }\r\n\r\n    updateRuntime(evt) {\r\n        let secsLeft = (evt.duration - evt.position) / 1000;\r\n        if (secsLeft < 2) this.decVolume();\r\n        this.setState({runtime: Math.round(secsLeft)});\r\n    }\r\n\r\n    enable() {\r\n        this.setState({disabled: false});\r\n    }\r\n\r\n    cut() {\r\n        this.stopSound();\r\n    }\r\n\r\n    sound() {\r\n        return (\r\n            <Sound\r\n                url={process.env.PUBLIC_URL + this.props.track.path}\r\n                playStatus={this.state.playing ? Sound.status.PLAYING : Sound.status.STOPPED}\r\n                volume={this.state.volume}\r\n                autoLoad={true}\r\n                onLoad={this.enable}\r\n                onPlaying={this.updateRuntime}\r\n            />\r\n        );\r\n    }\r\n\r\n    trackDetails() {\r\n        let cn = \"\";\r\n        if (this.state.disabled)\r\n            cn = \"disabled\"\r\n        else if (this.state.selected)\r\n            cn = \"clicked\";\r\n        else {\r\n            if (this.state.played)\r\n                cn += \"used \";\r\n            if (!this.props.selectable)\r\n                cn += \"unclickable\";\r\n        }\r\n        return (\r\n            <tr className={cn} onClick={this.click}>\r\n                <td>{this.props.track.title}</td>\r\n                <td>{this.props.track.artist}</td>\r\n                <td>{this.state.runtime} s</td>\r\n                {this.sound()}\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    control() {\r\n        return (\r\n            <tr className={this.state.selected ? \"clicked\" : \"\"}>\r\n                <td onClick={this.click}>{this.state.volume} %</td>\r\n                <td onClick={this.click}>{this.state.runtime} s</td>\r\n                <td><Button onClick={this.cut}>Cut out</Button></td>\r\n                {this.sound()}\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return this.state.playing ? this.control() : this.trackDetails();\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport songs from \"./songs.json\";\r\nimport \"./App.css\";\r\nimport Track from \"./Track.js\";\r\nimport { Container, Table, Nav, Navbar, NavItem, NavLink } from \"reactstrap\";\r\n\r\nexport default class TrackList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: \"\",\r\n      tab: \"cat\",\r\n    };\r\n    this.select = this.select.bind(this);\r\n    this.getRow = this.getRow.bind(this);\r\n  }\r\n\r\n  pickTab(x) {\r\n    this.setState({ tab: x });\r\n  }\r\n\r\n  select(idx) {\r\n    let val = this.state.selected === idx ? \"\" : idx;\r\n    console.log(this.state.selected);\r\n    this.setState({ selected: val });\r\n  }\r\n\r\n  getRow(x, idx) {\r\n    if (x.header) {\r\n      let cn = \"header\";\r\n      if (x.header.startsWith(\"Judges\")) cn += \" judge\";\r\n      else if (x.header.startsWith(\"Robot D\")) cn += \" design\";\r\n      else if (x.header.startsWith(\"Robot P\")) cn += \" performance\";\r\n      else if (x.header.startsWith(\"Core\")) cn += \" core\";\r\n      else if (x.header.startsWith(\"Project\")) cn += \" project\";\r\n      else if (x.header.startsWith(\"Champions\")) cn += \" champ\";\r\n      return (\r\n        <tr className={cn} key={songs.indexOf(x)}>\r\n          <td colSpan=\"3\">{x.header}</td>\r\n        </tr>\r\n      );\r\n    } else {\r\n      return (\r\n        <Track\r\n          track={x}\r\n          key={songs.indexOf(x)}\r\n          selectable={\r\n            this.state.selected === \"\" ? true : x.title === this.state.selected\r\n          }\r\n          onSelect={() => this.select(x.title)}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  sortString(a, b) {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    return 0;\r\n  }\r\n\r\n  render() {\r\n    let lst = songs;\r\n    if (this.state.tab === \"title\")\r\n      lst = songs\r\n        .filter((x) => !x.header)\r\n        .filter((x) => x.copyright)\r\n        .sort((a, b) => this.sortString(a.title, b.title));\r\n    else if (this.state.tab === \"artist\")\r\n      lst = songs\r\n        .filter((x) => !x.header)\r\n        .filter((x) => x.copyright)\r\n        .sort((a, b) => this.sortString(a.artist, b.artist));\r\n    else if (this.state.tab === \"royaltyfree\")\r\n      lst = songs.filter((x) => !x.header).filter((x) => !x.copyright);\r\n\r\n    return (\r\n      <Container>\r\n        <Navbar>\r\n          <Nav pills>\r\n            <NavItem>\r\n              <NavLink>Display format:</NavLink>\r\n            </NavItem>\r\n            <NavItem onClick={() => this.pickTab(\"cat\")}>\r\n              <NavLink active={this.state.tab === \"cat\"}>Categories</NavLink>\r\n            </NavItem>\r\n            <NavItem onClick={() => this.pickTab(\"title\")}>\r\n              <NavLink active={this.state.tab === \"title\"}>Title A-Z</NavLink>\r\n            </NavItem>\r\n            <NavItem onClick={() => this.pickTab(\"artist\")}>\r\n              <NavLink active={this.state.tab === \"artist\"}>Artist A-Z</NavLink>\r\n            </NavItem>\r\n            <NavItem onClick={() => this.pickTab(\"royaltyfree\")}>\r\n              <NavLink active={this.state.tab === \"royaltyfree\"}>\r\n                Royalty Free\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Navbar>\r\n        <Table dark>\r\n          <tbody>\r\n            {lst.map((x, idx) => {\r\n              return this.getRow(x, idx);\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport TrackList from \"./TrackList\";\r\n// import ScriptHandler from './ScriptHandler';\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n// // import Package from \"./package.alias.json\";\r\n// import Tooltip from \"react-tooltip-lite\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pdf: false,\r\n      tooltipOpen: false,\r\n    };\r\n    this.handleUpload = this.handleUpload.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  handleUpload(success) {\r\n    this.setState({ pdf: success });\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      tooltipOpen: !this.state.tooltipOpen,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let doPDF = false;\r\n    // <ScriptHandler handleUpload={this.handleUpload}/>\r\n    const classes = \"tooltip-inner\";\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <Container>\r\n            <Row>\r\n              <Col sm={12}>\r\n                {/* <Tooltip\r\n                  background={\"#bbb\"}\r\n                  color={\"#333\"}\r\n                  // content={\"v\" + Package.version}\r\n                >\r\n                  Award Soundboard\r\n                </Tooltip> */}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={doPDF ? 6 : 12}>\r\n                <TrackList />\r\n              </Col>\r\n              {doPDF ? <Col sm={6} xs={0}></Col> : \"\"}\r\n            </Row>\r\n          </Container>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}