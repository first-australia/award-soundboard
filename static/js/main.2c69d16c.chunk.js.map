{"version":3,"sources":["Track.js","TrackList.js","App.js","serviceWorker.js","index.js"],"names":["Track","_Component","props","_this","_classCallCheck","this","_callSuper","state","runtime","track","selected","playing","played","disabled","volume","cut","bind","click","playSound","stopSound","incVolume","decVolume","updateRuntime","enable","changingVolume","soundManager","setup","ignoreMobileRestrictions","_inherits","_createClass","key","value","evt","selectable","console","log","setState","onSelect","v","setTimeout","secsLeft","duration","position","Math","round","React","createElement","Sound","url","process","path","playStatus","status","PLAYING","STOPPED","autoLoad","onLoad","onPlaying","cn","className","onClick","title","artist","sound","Button","control","trackDetails","Component","TrackList","tab","select","getRow","x","idx","val","_this2","header","startsWith","songs","indexOf","colSpan","a","b","_this3","lst","filter","copyright","sort","sortString","Container","Navbar","Nav","pills","NavItem","NavLink","pickTab","active","Table","dark","map","App","pdf","tooltipOpen","handleUpload","toggle","success","Row","Col","sm","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c69d16c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Sound from 'react-sound';\nimport './App.css';\nimport {Button} from 'reactstrap';\nimport {soundManager} from 'soundmanager2';\n\nexport default class Track extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            runtime: this.props.track.runtime,\n            selected: false,\n            playing: false,\n            played: false,\n            disabled: true,\n            volume: 0\n        };\n        this.cut = this.cut.bind(this);\n        this.click = this.click.bind(this);\n        this.playSound = this.playSound.bind(this);\n        this.stopSound = this.stopSound.bind(this);\n        this.incVolume = this.incVolume.bind(this);\n        this.decVolume = this.decVolume.bind(this);\n        this.updateRuntime = this.updateRuntime.bind(this);\n        this.enable = this.enable.bind(this);\n        this.changingVolume = false;\n\n        soundManager.setup({\n            ignoreMobileRestrictions: true\n        });\n\n    }\n\n    componentDidMount() {\n    }\n\n    click(evt) {\n        // Should check if anything else is selected.\n        if (!this.props.selectable || this.state.disabled) return;\n        console.log(this.props.track);\n        if (this.changingVolume) return;\n        if (this.state.selected)\n            this.decVolume();\n        else\n            this.playSound();\n    }\n\n    playSound() {\n        this.setState({playing: true});\n        this.incVolume();\n        this.setState({selected: true});\n        this.props.onSelect();\n    }\n\n    incVolume() {\n        this.changingVolume = true;\n        let v = this.state.volume + 5;\n        if (v < 100) setTimeout(this.incVolume, 50);\n        else this.changingVolume = false;\n        this.setState({volume: v});\n    }\n\n    decVolume() {\n        this.changingVolume = true;\n        let v = this.state.volume - 4;\n        if (v > 0) setTimeout(this.decVolume, 50);\n        else {\n            this.stopSound();\n            this.changingVolume = false;\n        }\n        this.setState({volume: v});\n    }\n\n    stopSound() {\n        this.setState({playing: false, selected: false, volume: 0, played: true});\n        this.props.onSelect();\n    }\n\n    updateRuntime(evt) {\n        let secsLeft = (evt.duration - evt.position) / 1000;\n        if (secsLeft < 2) this.decVolume();\n        this.setState({runtime: Math.round(secsLeft)});\n    }\n\n    enable() {\n        this.setState({disabled: false});\n    }\n\n    cut() {\n        this.stopSound();\n    }\n\n    sound() {\n        return (\n            <Sound\n                url={process.env.PUBLIC_URL + this.props.track.path}\n                playStatus={this.state.playing ? Sound.status.PLAYING : Sound.status.STOPPED}\n                volume={this.state.volume}\n                autoLoad={true}\n                onLoad={this.enable}\n                onPlaying={this.updateRuntime}\n            />\n        );\n    }\n\n    trackDetails() {\n        let cn = \"\";\n        if (this.state.disabled)\n            cn = \"disabled\"\n        else if (this.state.selected)\n            cn = \"clicked\";\n        else {\n            if (this.state.played)\n                cn += \"used \";\n            if (!this.props.selectable)\n                cn += \"unclickable\";\n        }\n        return (\n            <tr className={cn} onClick={this.click}>\n                <td>{this.props.track.title}</td>\n                <td>{this.props.track.artist}</td>\n                <td>{this.state.runtime} s</td>\n                {this.sound()}\n            </tr>\n        );\n    }\n\n    control() {\n        return (\n            <tr className={this.state.selected ? \"clicked\" : \"\"}>\n                <td onClick={this.click}>{this.state.volume} %</td>\n                <td onClick={this.click}>{this.state.runtime} s</td>\n                <td><Button onClick={this.cut}>Cut out</Button></td>\n                {this.sound()}\n            </tr>\n        );\n    }\n\n    render() {\n        return this.state.playing ? this.control() : this.trackDetails();\n    }\n}\n","import React, { Component } from \"react\";\nimport songs from \"./songs.json\";\nimport \"./App.css\";\nimport Track from \"./Track.js\";\nimport { Container, Table, Nav, Navbar, NavItem, NavLink } from \"reactstrap\";\n\nexport default class TrackList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: \"\",\n      tab: \"cat\",\n    };\n    this.select = this.select.bind(this);\n    this.getRow = this.getRow.bind(this);\n  }\n\n  pickTab(x) {\n    this.setState({ tab: x });\n  }\n\n  select(idx) {\n    let val = this.state.selected === idx ? \"\" : idx;\n    console.log(this.state.selected);\n    this.setState({ selected: val });\n  }\n\n  getRow(x, idx) {\n    if (x.header) {\n      let cn = \"header\";\n      if (x.header.startsWith(\"Judges\")) cn += \" judge\";\n      else if (x.header.startsWith(\"Robot D\")) cn += \" design\";\n      else if (x.header.startsWith(\"Robot P\")) cn += \" performance\";\n      else if (x.header.startsWith(\"Core\")) cn += \" core\";\n      else if (x.header.startsWith(\"Project\")) cn += \" project\";\n      else if (x.header.startsWith(\"Champions\")) cn += \" champ\";\n      return (\n        <tr className={cn} key={songs.indexOf(x)}>\n          <td colSpan=\"3\">{x.header}</td>\n        </tr>\n      );\n    } else {\n      return (\n        <Track\n          track={x}\n          key={songs.indexOf(x)}\n          selectable={\n            this.state.selected === \"\" ? true : x.title === this.state.selected\n          }\n          onSelect={() => this.select(x.title)}\n        />\n      );\n    }\n  }\n\n  sortString(a, b) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n    return 0;\n  }\n\n  render() {\n    let lst = songs;\n    if (this.state.tab === \"title\")\n      lst = songs\n        .filter((x) => !x.header)\n        .filter((x) => x.copyright)\n        .sort((a, b) => this.sortString(a.title, b.title));\n    else if (this.state.tab === \"artist\")\n      lst = songs\n        .filter((x) => !x.header)\n        .filter((x) => x.copyright)\n        .sort((a, b) => this.sortString(a.artist, b.artist));\n    else if (this.state.tab === \"royaltyfree\")\n      lst = songs.filter((x) => !x.header).filter((x) => !x.copyright);\n\n    return (\n      <Container>\n        <Navbar>\n          <Nav pills>\n            <NavItem>\n              <NavLink>Display format:</NavLink>\n            </NavItem>\n            <NavItem onClick={() => this.pickTab(\"cat\")}>\n              <NavLink active={this.state.tab === \"cat\"}>Categories</NavLink>\n            </NavItem>\n            <NavItem onClick={() => this.pickTab(\"title\")}>\n              <NavLink active={this.state.tab === \"title\"}>Title A-Z</NavLink>\n            </NavItem>\n            <NavItem onClick={() => this.pickTab(\"artist\")}>\n              <NavLink active={this.state.tab === \"artist\"}>Artist A-Z</NavLink>\n            </NavItem>\n            <NavItem onClick={() => this.pickTab(\"royaltyfree\")}>\n              <NavLink active={this.state.tab === \"royaltyfree\"}>\n                Royalty Free\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Navbar>\n        <Table dark>\n          <tbody>\n            {lst.map((x, idx) => {\n              return this.getRow(x, idx);\n            })}\n          </tbody>\n        </Table>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TrackList from \"./TrackList\";\n// import ScriptHandler from './ScriptHandler';\nimport { Container, Row, Col } from \"reactstrap\";\n// // import Package from \"./package.alias.json\";\n// import Tooltip from \"react-tooltip-lite\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pdf: false,\n      tooltipOpen: false,\n    };\n    this.handleUpload = this.handleUpload.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  handleUpload(success) {\n    this.setState({ pdf: success });\n  }\n\n  toggle() {\n    this.setState({\n      tooltipOpen: !this.state.tooltipOpen,\n    });\n  }\n\n  render() {\n    let doPDF = false;\n    // <ScriptHandler handleUpload={this.handleUpload}/>\n    const classes = \"tooltip-inner\";\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Container>\n            <Row>\n              <Col sm={12}>\n                {/* <Tooltip\n                  background={\"#bbb\"}\n                  color={\"#333\"}\n                  // content={\"v\" + Package.version}\n                >\n                  Award Soundboard\n                </Tooltip> */}\n              </Col>\n            </Row>\n            <Row>\n              <Col sm={doPDF ? 6 : 12}>\n                <TrackList />\n              </Col>\n              {doPDF ? <Col sm={6} xs={0}></Col> : \"\"}\n            </Row>\n          </Container>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}