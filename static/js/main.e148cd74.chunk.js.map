{"version":3,"sources":["Track.js","TrackList.js","App.js","serviceWorker.js","index.js"],"names":["Track","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","runtime","track","selected","playing","played","disabled","volume","cut","bind","assertThisInitialized","click","playSound","stopSound","incVolume","decVolume","updateRuntime","enable","changingVolume","evt","selectable","console","log","setState","onSelect","v","setTimeout","secsLeft","duration","position","Math","round","react_default","a","createElement","lib_default","url","process","path","playStatus","Sound","status","PLAYING","STOPPED","autoLoad","onLoad","onPlaying","cn","className","onClick","title","artist","sound","Button","control","trackDetails","Component","TrackList","tab","select","getRow","x","idx","val","_this2","header","startsWith","key","songs","indexOf","colspan","Track_Track","b","_this3","lst","filter","sort","sortString","Container","Navbar","Nav","pills","NavItem","NavLink","pickTab","active","Table","dark","map","App","pdf","handleUpload","success","Row","Col","sm","TrackList_TrackList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e148cd74.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Sound from 'react-sound';\nimport './App.css';\nimport { Button } from 'reactstrap';\n\nexport default class Track extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      runtime: this.props.track.runtime,\n      selected: false,\n      playing: false,\n      played: false,\n      disabled: true,\n      volume: 0\n    };\n    this.cut = this.cut.bind(this);\n    this.click = this.click.bind(this);\n    this.playSound = this.playSound.bind(this);\n    this.stopSound = this.stopSound.bind(this);\n    this.incVolume = this.incVolume.bind(this);\n    this.decVolume = this.decVolume.bind(this);\n    this.updateRuntime = this.updateRuntime.bind(this);\n    this.enable = this.enable.bind(this);\n    this.changingVolume=false;\n  }\n\n  click(evt) {\n    // Should check if anything else is selected.\n    if (!this.props.selectable || this.state.disabled) return;\n    console.log(this.props.track);\n    if (this.changingVolume) return;\n    if (this.state.selected)\n      this.decVolume();\n    else\n      this.playSound();\n  }\n\n  playSound() {\n    this.setState({playing: true});\n    this.incVolume();\n    this.setState({selected: true});\n    this.props.onSelect();\n  }\n\n  incVolume() {\n    this.changingVolume = true;\n    let v = this.state.volume+5;\n    if (v < 100) setTimeout(this.incVolume,50);\n    else this.changingVolume = false;\n    this.setState({volume: v});\n  }\n\n  decVolume() {\n    this.changingVolume = true;\n    let v = this.state.volume-4;\n    if (v > 0) setTimeout(this.decVolume,50);\n    else {\n      this.stopSound();\n      this.changingVolume = false;\n    }\n    this.setState({volume: v});\n  }\n\n  stopSound() {\n    this.setState({playing: false,selected: false,volume:0, played: true});\n    this.props.onSelect();\n  }\n\n  updateRuntime(evt) {\n    let secsLeft = (evt.duration - evt.position)/1000;\n    if (secsLeft < 2) this.decVolume();\n    this.setState({runtime: Math.round(secsLeft)});\n  }\n\n  enable() {\n    this.setState({disabled: false});\n  }\n\n  cut() {\n    this.stopSound();\n  }\n\n  sound() {\n    return (\n      <Sound\n        url={process.env.PUBLIC_URL + this.props.track.path}\n        playStatus={this.state.playing ? Sound.status.PLAYING : Sound.status.STOPPED}\n        volume={this.state.volume}\n        autoLoad={true}\n        onLoad={this.enable}\n        onPlaying={this.updateRuntime}\n      />\n    );\n  }\n\n  trackDetails() {\n    let cn = \"\";\n    if (this.state.disabled)\n      cn = \"disabled\"\n    else if (this.state.selected)\n      cn = \"clicked\";\n    else {\n      if (this.state.played)\n        cn += \"used \";\n      if (!this.props.selectable)\n        cn += \"unclickable\";\n    }\n    return (\n      <tr className={cn} onClick={this.click}>\n        <td>{this.props.track.title}</td>\n        <td>{this.props.track.artist}</td>\n        <td>{this.state.runtime} s</td>\n        {this.sound()}\n      </tr>\n    );\n  }\n\n  control() {\n    return (\n      <tr className={this.state.selected ? \"clicked\" : \"\"}>\n        <td onClick={this.click}>{this.state.volume} %</td>\n        <td onClick={this.click}>{this.state.runtime} s</td>\n        <td><Button onClick={this.cut}>Cut out</Button></td>\n        {this.sound()}\n      </tr>\n    );\n  }\n\n  render() {\n    return this.state.playing ? this.control() : this.trackDetails();\n  }\n}\n","import React, { Component } from 'react';\nimport songs from './songs.json';\nimport './App.css';\nimport Track from './Track.js';\nimport { Container, Table, Nav, Navbar, NavItem, NavLink } from 'reactstrap';\n\nexport default class TrackList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: \"\",\n      tab: \"cat\"\n    }\n    this.select = this.select.bind(this);\n    this.getRow = this.getRow.bind(this);\n  }\n\n  pickTab(x) {\n    this.setState({tab: x});\n  }\n\n  select(idx) {\n    let val = (this.state.selected === idx ? \"\" : idx)\n    console.log(this.state.selected);\n    this.setState({selected: val});\n  }\n\n  getRow(x,idx) {\n    if (x.header) {\n      let cn = \"header\";\n      if (x.header.startsWith(\"Judges\"))\n        cn += \" judge\";\n      else if (x.header.startsWith(\"Robot D\"))\n        cn += \" design\";\n      else if (x.header.startsWith(\"Robot P\"))\n        cn += \" performance\";\n      else if (x.header.startsWith(\"Core\"))\n        cn += \" core\";\n      else if (x.header.startsWith(\"Project\"))\n        cn += \" project\";\n      else if (x.header.startsWith(\"Champions\"))\n        cn += \" champ\";\n      return (\n        <tr className={cn} key={songs.indexOf(x)}><td colspan=\"3\">{x.header}</td></tr>\n      );\n    } else {\n      return (\n        <Track track={x} key={songs.indexOf(x)}\n            selectable={this.state.selected === \"\" ? true : x.title === this.state.selected}\n            onSelect={() => this.select(x.title)}/>\n      );\n    }\n  }\n\n  sortString(a,b) {\n    if ( a < b ) return -1;\n    if ( a > b ) return 1;\n    return 0;\n  }\n\n  render() {\n    let lst = songs;\n    if (this.state.tab === \"title\")\n      lst = songs.filter(x=>!x.header).sort((a,b)=>this.sortString(a.title,b.title));\n    else if (this.state.tab === \"artist\")\n      lst = songs.filter(x=>!x.header).sort((a,b)=>this.sortString(a.artist,b.artist));\n\n\n    return (\n      <Container>\n      <Navbar>\n        <Nav pills>\n          <NavItem><NavLink>Display format:</NavLink></NavItem>\n          <NavItem onClick={() => this.pickTab(\"cat\")}>\n            <NavLink active={this.state.tab === \"cat\"}>Categories</NavLink>\n          </NavItem>\n          <NavItem onClick={() => this.pickTab(\"title\")}>\n            <NavLink active={this.state.tab === \"title\"}>Title A-Z</NavLink>\n          </NavItem>\n          <NavItem onClick={() => this.pickTab(\"artist\")}>\n            <NavLink active={this.state.tab === \"artist\"}>Artist A-Z</NavLink>\n          </NavItem>\n        </Nav>\n        </Navbar>\n          <Table dark>\n\t        <tbody>\n    \t      {lst.map((x,idx) => {return this.getRow(x,idx)})}\n\t\t\t</tbody>\n          </Table>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport TrackList from './TrackList';\n// import ScriptHandler from './ScriptHandler';\nimport { Container, Row, Col } from 'reactstrap';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { pdf : false };\n    this.handleUpload = this.handleUpload.bind(this)\n  }\n\n  handleUpload(success) {\n    this.setState({pdf: success});\n  }\n\n  render() {\n    let doPDF = false;\n    // <ScriptHandler handleUpload={this.handleUpload}/>\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Container>\n            <Row>\n              <Col sm={doPDF ? 6 : 12}>\n                <TrackList />\n              </Col>\n              {(doPDF) ? (\n                <Col sm={6} xs={0}>\n                </Col>\n              ) : \"\" }\n            </Row>\n          </Container>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}